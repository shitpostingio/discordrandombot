image: golang:buster

variables:
  REPO_NAME: "gitlab.com/shitposting/discord-random"
  
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - printf "machine gitlab.com\n\
    login ${ACCESS_TOKEN_USR}\n\
    password ${ACCESS_TOKEN_PWD}\n\
    \n\
    machine api.gitlab.com\n\
    login ${ACCESS_TOKEN_USR}\n\
    password ${ACCESS_TOKEN_PWD}\n"\
    >> /root/.netrc
  - chmod 600 /root/.netrc

stages:
  - format
  - test
  - build
  - docker
  - deploy

.exceptions: &exclude  # use <<: *exclude to add this rule to a job
  except:
    changes:
      - README.md
      - .gitignore

go-fmt:
  stage: format
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
  <<: *exclude
      
            
lint_code:
  stage: format
  script:    
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
  <<: *exclude
      
test:
  stage: test
  script: 
    - go test ./...
  <<: *exclude
      
compile:
  stage: build
  script:
   - go build
  <<: *exclude
      
docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" --build-arg SSH_PRIV="${SSH_PRIVATE_KEY}" --build-arg SSH_PUB="${SSH_PUBLIC_KEY}" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master
  <<: *exclude

docker-build:
  # Official docker image.
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --build-arg SSH_PRIV="${SSH_PRIVATE_KEY}" --build-arg SSH_PUB="${SSH_PUBLIC_KEY}" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    refs:
      - master
    changes:
      - README.md
      - .gitignore

prod-deploy:
  image: debian:buster
  stage: deploy
  before_script:
    - apt update && apt install -y sshpass
  script:
    - sshpass -V
    - export SSHPASS=$USER_PASS
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME docker pull registry.gitlab.com/shitposting/discord-random:latest
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME docker stop $DOCKER_CONT_NAME
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME docker rm $DOCKER_CONT_NAME
    - sshpass -e ssh -p $PORT -o stricthostkeychecking=no $USER_ID@$HOSTNAME docker run --restart unless-stopped -d -e DISCORD_TOKEN="$DISCORD_TOKEN" -e API_ENDPOINT="$RANDOMAPI_ENDPOINT" -e API_PLATFORM="$API_PLATFORM" --name $DOCKER_CONT_NAME registry.gitlab.com/shitposting/discord-random
  when: manual
  <<: *exclude